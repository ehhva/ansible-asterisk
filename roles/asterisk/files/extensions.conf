[default]
; no defaults

[Phones] ; Since we have so few phones, it's easier to use one context

; Blue team phones
	exten => _30[01]X,1,GoSub(connectPhones,start,1(${EXTEN},${CALLERID(num)}))
	    same => n,Hangup()

; White team phones
	exten => _350[12],1,GoSub(connectPhones,start,1(${EXTEN},${CALLERID(num)}))
	    same => n,Hangup()
; White team scoring
	exten => _3999,1,Verbose("Dialing ${EXTEN}")
	    same => n,Dial(PJSIP/${EXTEN})
	    same => n,Hangup()

; Red team phone(s)
	exten => _360[12],1,GoSub(connectPhones,start,1(${EXTEN},${CALLERID(num)}))
	     same => n,Hangup()

; Enables text messaging between phones
[astsms]
	exten => _.,1,NoOp(SMS receiving dialplan invoked)
	exten => _.,n,NoOp(To ${MESSAGE(to)})
	exten => _.,n,NoOp(From ${MESSAGE(from)})
	exten => _.,n,NoOp(Body ${MESSAGE(body)})
	exten => _.,n,System(/bin/echo "${MESSAGE(to)}\n${MESSAGE(from)}\n${MESSAGE(body)}" > /root/text.txt)
	exten => _.,n,Set(ACTUALTO=${CUT(MESSAGE(to),@,1)})
	exten => _.,n,MessageSend(${ACTUALTO},${MESSAGE(from)})
	exten => _.,n,NoOp(Send status is ${MESSAGE_SEND_STATUS})
	exten => _.,n,GotoIf($[“${MESSAGE_SEND_STATUS}” != “SUCCESS”]?sendfailedmsg)
	exten => _.,n,Hangup()

	exten => _.,n(sendfailedmsg),Set(MESSAGE(body)=”[${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)}] Your message to ${EXTEN} has failed. Retry later.”)
	exten => _.,n,Set(ME_1=${CUT(MESSAGE(from),< ,2)}) exten => _.,n,Set(ACTUALFROM=${CUT(ME_1,@,1)})
	exten => _.,n,MessageSend(${ACTUALFROM},ServiceCenter)
	exten => _.,n,Hangup()
	exten => _.,n,Hangup()


; Subroutine that records every call
; Recorded calls are stored in /var/spool/asterisk/monitor/
[connectPhones]
	exten => start,1,MixMonitor(${ARG2}_to_${ARG1}_${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}.wav,b)
	    same => n,Dial(PJSIP/${ARG1})
	    same => n,Dial(PJSIP/${ARG2})
	    same => n,Hangup()
	    same => n,Return()
